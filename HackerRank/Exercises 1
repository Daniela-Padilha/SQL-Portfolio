/*Database description
Table City, with the following columns:
ID number
Name varchar(17)
CountryCode varchar(3)
District varchar (20)
Population number */

/*Task 1. Query all columns for all American cities in the CITY table with populations larger than 100000. The CountryCode for America is USA.*/

Select 
  * 
from 
  city 
Where 
  countrycode = 'USA' 
  AND population > 100000;

/*Task 2. Query the NAME field for all American cities in the CITY table with populations larger than 120000.*/

Select 
  name 
from 
  city 
Where 
  countrycode = 'USA' 
  AND population > 120000;

/*Task 3. Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.*/

Select 
  * 
from 
  city 
Where 
  countrycode = 'JPN';

/*Database description
Table Station, with the following columns:
ID number
City varchar2(21)
State varchar2(2)
Lat_N number
Long_W number 

where LAT_N is the northern latitude and LONG_W is the western longitude.*/

/*Task 4. Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer.*/

SELECT 
  DISTINCT city 
FROM 
  station 
WHERE 
  ID % 2 = 0;

/*Task 5. Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.*/

SELECT 
  city, 
  length(city) 
FROM 
  station ORSER BY length(city) ASC, 
  city 
LIMIT 
  1;
SELECT 
  City, 
  length(city) 
FROM 
  station 
ORDER BY 
  length(city) DESC, 
  city 
LIMIT 
  1;

/*Task 6. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.*/

SELECT 
  DISTINCT city 
FROM 
  station 
WHERE 
  city LIKE 'a%' 
  OR city LIKE 'e%' 
  OR city LIKE 'i%' 
  OR city LIKE 'o%' 
  OR city LIKE 'u%';

/*Task 7. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.*/

SELECT 
  DISTINCT city 
FROM 
  station 
WHERE 
  city LIKE '%a' 
  OR city LIKE '%e' 
  OR city LIKE '%i' 
  OR city LIKE '%o' 
  OR city LIKE '%u';

/* Task 8. Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.*/

SELECT 
  DISTINCT city 
FROM 
  station 
WHERE 
  Upper (
    substr(City, 1, 1)
  ) in ('a', 'e', 'i', 'o', 'u') 
  and lower(
    substr(
      City, 
      Length(City), 
      1
    )
  ) in ('a', 'e', 'i', 'o', 'u');

/* Task 9. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.*/

SELECT 
  DISTINCT city 
FROM 
  station 
WHERE 
  Upper (
    substr(City, 1, 1)
  ) not in ('a', 'e', 'i', 'o', 'u');
  
  /* Task 10. Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.*/
  
  SELECT 
  DISTINCT city 
FROM 
  station 
WHERE 
  lower(
    substr(
      City, 
      Length(City), 
      1
    )
  ) not in ('a', 'e', 'i', 'o', 'u');

/* Task 11. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.*/

SELECT 
  DISTINCT city 
FROM 
  station 
WHERE 
  Upper (
    substr(City, 1, 1)
  ) not in ('a', 'e', 'i', 'o', 'u') 
  or lower(
    substr(
      City, 
      Length(City), 
      1
    )
  ) not in ('a', 'e', 'i', 'o', 'u');
  
  /* Task 12. Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates./*

SELECT 
  DISTINCT city 
FROM 
  station 
WHERE 
  Upper (
    substr(City, 1, 1)
  ) not in ('a', 'e', 'i', 'o', 'u') 
  and lower(
    substr(
      City, 
      Length(City), 
      1
    )
  ) not in ('a', 'e', 'i', 'o', 'u');

/* Higher than 75 Marks:
Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. 
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.*/

Select 
  name 
from 
  students 
where 
  marks > 75 
order by 
  Right(name, 3), 
  ID;

/* Employee Names:
Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.*/

Select 
  name 
from 
  Employee 
Order by 
  name ASC;

/* Employee Salaries:
Write a query that prints a list of employee names (i.e.: the name attribute)
for employees in Employee having a salary greater than 2000 per month who have been employees for less than 10 months. 
Sort your result by ascending employee_id.*/

Select 
  name 
from 
  Employee 
where 
  salary > 2000 
  and months < 10 
order by 
  employee_id ASC;

